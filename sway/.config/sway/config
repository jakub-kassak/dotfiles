# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term wezterm
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | wmenu | xargs swaymsg exec --
set $menu 'GTK_THEME=$(HOUR=$(date +"%H"); [ $HOUR -ge 5 -a $HOUR -lt 20 ] && echo 'Yaru' || echo 'Yaru-dark') wofi -I --show drun'

# set $menu GTK_THEME='Yaru-dark' wofi -I --show drun
# set $menu_alt exec $term  -e bash -c 'compgen -c | grep -v fzf | sort -u | fzf --layout=reverse | xargs -r swaymsg -t command exec'



include /etc/sway/config-vars.d/*

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
output eDP-1 scale 1
output eDP-1 resolution 2880x1620 position 480,2160
output HDMI-A-1 resolution 3840x2160 position 0,0


# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
# ==> to change sleep timeout use edit 'sudo nvim /etc/systemd/logind.conf' --> IdleActionSec=21min or '/etc/systemd/sleep.conf' --> HibernateDelaySec=30min
exec swayidle -w \
         timeout 1100 'notify-send -u critical "Screen-Lock in 50s ..."' \
         timeout 1190 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
         timeout 1200 '~/.local/bin/create_lock_image && swaylock -f -i /tmp/sway_lock_image.png' \
         before-sleep '~/.local/bin/create_lock_image && swaylock -f -i /tmp/sway_lock_image.png'

exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec hash dbus-update-activation-environment 2>/dev/null && \
     dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:

input "1267:12736:ASUE120B:00_04F3:31C0_Touchpad" {
    accel_profile adaptive
    scroll_factor 0.3

    pointer_accel 0.45
    natural_scroll enabled
    tap enabled
    middle_emulation enabled
}

input "type:keyboard" {
    xkb_layout "sk"
    xkb_variant "sk-prog"
}


# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

#
# Workspaces:
#
assign [instance="obsidian"] 3
for_window [instance="obsidian"] focus


#
# Windows:
#
# Find the app_id or class of a window by inspecting the result of swaymsg -t get_tree.
#
# set floating for certain apps
    for_window [app_id="virt-manager"] floating enable, border normal
    for_window [app_id="copyq"] floating enable, sticky enable, resize set height 600px width 550px, move position cursor, move down 330
# set floating for window roles
    for_window [window_role="pop-up"] floating enable
    for_window [window_role="bubble"] floating enable
    for_window [window_role="task_dialog"] floating enable
    for_window [window_role="Preferences"] floating enable
    for_window [window_type="dialog"] floating enable
    for_window [window_type="menu"] floating enable
    for_window [window_role="About"] floating enable
    for_window [title="File Operation Progress"] floating enable, border pixel 1, sticky enable, resize set width 40 ppt height 30 ppt


#
# Autostart:
#

exec swaymsg "workspace 1; exec $term"
exec swaymsg "workspace 2; exec firefox"
exec swaymsg "workspace 3; exec obsidian"
exec /usr/bin/copyq
exec mako
exec nm-applet --indicator
exec set-theme.sh

### Theme

font pango:Fira Sans SemiBold 10

# border without title bar
default_border pixel 3
client.focused #000000 #5e81ac #ffffff


### Key bindings
#
# Basics:
#


bindsym $mod+Shift+r exec "swaymsg '[con_id=$(swaymsg -t get_tree | jq '.. | select(.focused? == true) | .id')]' title_format \"$(rofi -dmenu -p 'Rename window: ')\""

    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu
    # bindsym $mod+shift+d exec $menu_alt
    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    # bindsym $mod+Left focus left
    # bindsym $mod+Down focus down
    # bindsym $mod+Up focus up
    # bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    # bindsym $mod+Shift+Left move left
    # bindsym $mod+Shift+Down move down
    # bindsym $mod+Shift+Up move up
    # bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # will grow the containers height
    # fi
    bindsym $left resize shrink width 30px
    bindsym $up resize grow height 30px
    bindsym $down resize shrink height 30px
    bindsym $right resize grow width 30px

    # Ditto, with arrow keys
    # bindsym Left resize shrink width 10px
    # bindsym Down resize grow height 10px
    # bindsym Up resize shrink height 10px
    # bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
  swaybar_command waybar
} 
# Toggle the bar visibility

# bar {
#     position top
#
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%H:%M    %Y/%m/%d'; do sleep 1; done
#
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }

bindsym $mod+m exec "~/.local/bin/toggle_waybar.sh"

include /etc/sway/config.d/*

# Power button
# bindsym XF86PowerOff exec swaynag -m "Suspend?" -b "Yes" "systemctl suspend-then-hibernate"
#
# Volume control
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle

# Media playback control
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86AudioStop exec playerctl stop

# Screen brightness control (if applicable)
bindsym XF86MonBrightnessUp exec brightnessctl set +5%
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-

# Capture the currently active output
bindsym Print exec grimshot --notify save output ~/para/3_resources/screenshots/$(date +'%Y-%m-%d_%H:%M:%S').png

# Capture the currently active window
bindsym Mod1+Print exec grimshot --notify save active ~/para/3_resources/screenshots/$(date +'%Y-%m-%d_%H:%M:%S').png

# Select and capture a custom rectangular area
bindsym Ctrl+Print exec grimshot --notify save area ~/para/3_resources/screenshots/$(date +'%Y-%m-%d_%H:%M:%S').png

# Capture the currently active output to clipboard
bindsym Shift+Print exec grimshot --notify copy output

# Capture the currently active window to clipboard
bindsym Shift+Mod1+Print exec grimshot --notify copy active

# Select and capture a custom rectangular area to clipboard
bindsym Shift+Ctrl+Print exec grimshot --notify copy area

# Copyq
bindsym $mod+Shift+v exec copyq toggle

# Mako
bindsym $mod+n exec makoctl dismiss
bindsym $mod+Shift+n exec makoctl dismiss -a

# Hide cursor
seat seat0 hide_cursor 5000
